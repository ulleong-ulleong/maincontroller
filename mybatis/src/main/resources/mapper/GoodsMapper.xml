<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ksmart.mybatis.mapper.GoodsMapper">
	<!-- ResultMap : DTO와 DB와 조회된 결과 맵핑 객체 -->
	<resultMap type="Goods" id="goodsResultMap">
		<!-- pk == id  -->
		<id property="goodsCode" column="g_code" />
		<!-- pk 제외한 모든 컬럼 == result -->
		<result property="goodsName" 		column="g_name"/>
		<result property="goodsPrice" 		column="g_price"/>
		<result property="goodsSellerId" 	column="g_seller_id"/>
		<result property="goodsRegDate" 	column="g_reg_date"/>
	
	<!-- 이제까지는 controller에 만들어진 property를 가져왔다면 지금은 잘 만들어진 DTO를 참조해서 가져옴. -->
		<!-- 고급매핑 1:1 관계일때 -->
		<!-- association은 DTO , ex: Member memberInfo라는 형태로 추가했다면 property에는 Member의 속성명인 memberInfo가  -->
		<!-- <association property="Member의 속성명" javaType="dto(Member)"></association>  -->
		<association property="memberInfo" javaType="Member">
		<!-- member의 PK를 기준으로 작성 -->
			<id property="memberId" column="m_id"></id>
			<id property="memberPw" column="m_pw"></id>
			<id property="memberName" column="m_name"></id>
			<id property="memberLevel" column="m_level"></id>
			<id property="memberLevelName" column="m_level_name"></id>
			<id property="memberEmail" column="m_email"></id>
			<id property="memberAddr" column="m_addr"></id>
			<id property="memberRegDate" column="m_reg_date"></id>
		</association>
		
		<!-- 상품입장에서 판매자(1:1)를 가져올 것인지 판매자 입장에서 상품을(1:N) 가져올 것인지 선택해야 한다. -->
	</resultMap>
	<!-- 상품등록, 쿼리내에 주석을 작성하면 오류가 발생할 수 있음. -->
	<!-- selectKey keyProperty : DTO 속성명, resultType : 속성의 데이터 타입, order : insert 실행 전(BEFORE) or 실행 후(AFTER)
		order: 순서를 정함. BEFORE의 의미 : insert하기전에 select를 해라.-->
	<insert id="addGoods" parameterType="Goods">
		<selectKey keyProperty="goodsCode" resultType="String" order="BEFORE">
		/* 상품 코드 자동 증가 */
			SELECT
				(CASE
				WHEN COUNT(g.g_code) = 0 THEN 'g001'
				WHEN (MAX(CAST(SUBSTRING_INDEX(g.g_code, 'g', -1) AS UNSIGNED))+1) > 999
				THEN CONCAT('g', MAX(CAST(SUBSTRING_INDEX(g.g_code, 'g', -1) AS UNSIGNED))+1)	
				ELSE
					CONCAT('g', LPAD(MAX(CAST(SUBSTRING_INDEX(g.g_code, 'g', -1) AS UNSIGNED)+1),3,'0'))
				END) AS goodsCode
			FROM
				tb_goods AS g;
		</selectKey>
		/* 상품등록 */
		INSERT INTO tb_goods
		(g_code, g_name, g_price, g_seller_id, g_reg_date)
		values
		(#{goodsCode}, #{goodsName}, #{goodsPrice}, #{goodsSellerId}, CURDATE())
	</insert>
	<!-- 상품 목록 조회 -->
	<select id="getGoodsList" resultMap="goodsResultMap">
	/*상품 목록 조회*/
	SELECT
		g.g_code,
		g.g_name,
		g.g_price,
		g.g_seller_id,
		g.g_reg_date,
		m.m_id,
		m.m_pw,
		m.m_name,
		m.m_level,
		m.m_email,
		m.m_addr,
		m.m_reg_date
	FROM
		tb_goods AS g
		INNER JOIN
		tb_member AS m
		ON
		g.g_seller_id = m.m_id;
		
	</select>
</mapper>